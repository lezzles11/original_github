function deserializeArray(array) {
    let o = {}
    console.log(array)
    $.each(array, function() {
        if (o[this.name] !== undefined) {
            if (!o[this.name].push) {
                o[this.name] = [o[this.name]];
            }
            if (o[this.name].includes("_id")) {
                o[this.name].push(parseInt(this.value) || '');
            } else {
                o[this.name].push(this.value || '');
            }
        } else {
            o[this.name] = this.value || '';
        }
    });
    return o;
}

async function postForm(route, formObject) {
    let get_object = deserializeArray(formObject)
    let get_route
    see.should("be an object")
    see.is("form object", "data", get_object)

    if (!get_object["password"]) {
        let getId = verify_local_storage()
        formObject["user_id"] = getId;
        see.should("object should also have user_id")
        see.is(get_object)
        get_route = "/api/user/" + getId + route;
    } else {
        // this is for signup and login routes 
        get_route = route;
    }
    see.should("not have api/user/id if signup or login")
    see.is(get_route)
    let get_response = await axios.post(get_route, get_object)
    if (get_response.data.error) {
        see.problem("error", "data", get_response.data)
        iziToast.error({
            title: get_response.data.error,
            message: `${get_response.data.location} && ${get_response.data.expected}`,
        });
    } else {
        return get_response.data
    }
}

function confirm_signup_login(responseFromLoginSignup, route) {
    let user = JSON.stringify(responseFromLoginSignup)
    window.localStorage.setItem("user", user)
    setTimeout(() => {
        window.location.replace(route)
    }, 1000)
}

function verify_local_storage() {
    let localStorage = window.localStorage.getItem("user")
    let user = JSON.parse(localStorage)
    if (user.id) {
        return parseInt(user.id)
    } else {
        return false;
    }
}

/**
 * @example
 * confirm_logout("/login")
 * @description 
 *  * removes from local storage user
 * replaces window.location with login 
 * @author zen-out
 * @date 2022-03-16
 * @param {string} routeToGoAfter
 */
function confirm_logout(routeToGoAfter) {
    window.localStorage.removeItem("user")
    setTimeout(() => {
        window.location.replace(routeToGoAfter)
    }, 1000)
}


$(() => {
    console.log("form js loads")
    $(".signup_form").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/api/signup", items)
        confirm_signup_login(getItems, `/dashboard/${getItems["user_id"]}`)
    })
    $(".login_form").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/api/login", items)
        confirm_signup_login(getItems, `/dashboard/${getItems["user_id"]}`)
    })
    $(".post_problem_form").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        see.should("have user id appended to the object")
        see.is(items)
        let getItems = await postForm("/problem", items)
        see.is("is it getting items", "data", getItems)
    })
    $(".post_cheatsheet_form").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/cheatsheet", items)
        see.is("is it getting items", "object", getItems)
            // reload the page
    })
    $(".post_tag_snippet_form").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/tag_snippet", items)
        see.is("is it getting items", "object", getItems)
            // reload the page
    })
    $(".post_task_form").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/task", items)
        see.is("is it getting items", "object", getItems)
    })
    $(".post_problem_task").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/problem_task", items)
        see.is("is it getting items", "object", getItems)
    })
    $(".post_problem_cheatsheet").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/problem_cheatsheet", items)
    })
    $(".post_problem_tag_snippet").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/problem_tag_snippet", items)
        see.is(getItems)
    })
    $(".post_cheatsheet_task").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/cheatsheet_task", items)
        see.is("is it getting items", "object", getItems)
    })
    $(".post_cheatsheet_tag_snippet").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/cheatsheet_tag_snippet", items)
        see.is("is it getting items", "object", getItems)
    })
    $(".post_task_tag_snippet").submit(async function(event) {
        event.preventDefault()
        let items = $(this).serializeArray()
        let getItems = await postForm("/task_tag_snippet", items)
        see.is("is it getting items", "object", getItems)
    })
})