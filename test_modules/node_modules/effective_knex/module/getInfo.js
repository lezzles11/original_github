const knex = require("knex")({
    client: "postgresql",
    connection: {
        database: "hbs_auth_temp",
        user: "postgres",
        password: "postgres",
    }
})

/**
 * knexCleanTable.getTableInfo(knex, table, type="object")
 * @description 
 * 1. Has a dictionary - 
 * 2. Gets knex(table).columnInfo()
 * 3. if property isn't created 
 * 4. Push it into array called tableColumns
 * 5. If third parameter is object, will return key and value pairs of column: type. Else, if third parameter is array, will return an array of the key values 
 * @example
 * this.getTableInfo(knex, "hourglass", "object")
 * // returns {emails: string... }
 * @author zen-out
 * @date 2022-02-16
 * @param {any} knex
 * @param {any} table
 * @param {any} type="object"
 * @returns {any}
 */
async function getInfo(knex, table, type = "object") {
    let dictionary = {
        timestamp: "object",
        boolean: "boolean",
        character: "string",
        integer: "number"
    }
    let tableInfo = {}
    let tableColumns = []
    let columns = await knex(table).columnInfo()
    for (const property in columns) {
        if (property !== "created") {
            tableColumns.push(property)
            let name = property
            let first = columns[property]["type"].split(" ")
            tableInfo[name] = dictionary[first[0]]
        }
    }
    if (type === "object") {
        return tableInfo;
    } else if (type === "array") {
        return tableColumns;
    } else {
        console.log("what other types are there")
    }
}
module.exports = { getInfo }